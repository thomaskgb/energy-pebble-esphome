name: Build and Deploy Firmware

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.2.0

env:
  ESPHOME_VERSION: "2024.6.0"

jobs:
  build-firmware:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source repo
        uses: actions/checkout@v4
        
      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Building version: ${VERSION}"
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install ESPHome
        run: |
          pip install esphome==2025.6.0
          
      - name: Create secrets files
        run: |
          # Create main secrets.yaml
          cp secrets_template.yaml secrets.yaml
          # Create components/secrets.yaml with same content  
          cp secrets.yaml components/secrets.yaml
          
      - name: Build firmware
        env:
          version: ${{ steps.version.outputs.version }}
        run: |
          esphome compile energy_pebble.yaml
            
      - name: Prepare firmware files
        run: |
          mkdir -p firmware
          cp .esphome/build/energy-pebble/.pioenvs/energy-pebble/firmware.ota.bin \
            firmware/energy-pebble-${{ steps.version.outputs.version }}.bin
          # List what we have for debugging
          ls -la .esphome/build/energy-pebble/.pioenvs/energy-pebble/
          echo "Firmware build completed successfully!"
            
      - name: Checkout target repo
        uses: actions/checkout@v4
        with:
          repository: thomaskgb/energy-pebble-api
          token: ${{ secrets.API_REPO_TOKEN }}
          path: api-repo
          
      - name: Copy firmware to API repo
        run: |
          mkdir -p api-repo/firmware
          cp firmware/energy-pebble-${{ steps.version.outputs.version }}.bin \
            api-repo/firmware/
          # Note: We only need the .bin file for OTA updates
            
      - name: Create version info file
        run: |
          cat > api-repo/firmware/latest.json << EOF
          {
            "version": "${{ steps.version.outputs.version }}",
            "filename": "energy-pebble-${{ steps.version.outputs.version }}.bin",
            "build_date": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "git_commit": "${{ github.sha }}"
          }
          EOF
          
      - name: Commit and push to API repo
        run: |
          cd api-repo
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add firmware/
          git commit -m "feat: Add firmware version ${{ steps.version.outputs.version }}"
          git push