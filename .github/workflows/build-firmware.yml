name: Build and Deploy Firmware

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.2.0

env:
  ESPHOME_VERSION: "2024.6.0"

jobs:
  build-firmware:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source repo
        uses: actions/checkout@v4
        
      - name: Extract version from tag
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Building version: ${VERSION}"
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install ESPHome
        run: |
          pip install esphome==2025.6.0
          
      - name: Create secrets files
        run: |
          # Create main secrets.yaml
          cp secrets_template.yaml secrets.yaml
          # Create components/secrets.yaml with same content  
          cp secrets.yaml components/secrets.yaml
          
      - name: Build firmware
        env:
          version: ${{ steps.version.outputs.version }}
        run: |
          esphome compile energy_pebble.yaml
            
      - name: Prepare firmware files
        run: |
          mkdir -p firmware
          cp .esphome/build/energy-pebble/.pioenvs/energy-pebble/firmware.ota.bin \
            firmware/energy-pebble-${{ steps.version.outputs.version }}.bin
          # List what we have for debugging
          ls -la .esphome/build/energy-pebble/.pioenvs/energy-pebble/
          echo "Firmware build completed successfully!"
            
      - name: Upload firmware via API
        run: |
          # Upload firmware to the API server using the admin endpoint
          curl -X POST "https://energypebble.tdlx.nl/api/firmware/upload" \
            -H "Authorization: Bearer ${{ secrets.API_ADMIN_TOKEN }}" \
            -F "version=${{ steps.version.outputs.version }}" \
            -F "firmware=@firmware/energy-pebble-${{ steps.version.outputs.version }}.bin" \
            -F "git_commit=${{ github.sha }}" \
            -F "build_date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
            --fail-with-body \
            -v